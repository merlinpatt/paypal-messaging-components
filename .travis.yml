# Use this URL to test out config changes
# https://config.travis-ci.com/explore

os: linux
dist: xenial
language: node_js

node_js:
    - '10'

env:
    global:
        - DIRTY_SNAPSHOTS=0
    jobs:
        - TEST_PATH_PATTERN=none

cache:
    npm: false

addons:
    hosts:
        - localhost.paypal.com

before_install:
    - npm i -g npm@6

before_script:
    - npm run dev:standalone &
    - DEV_SERVER_PID=$!
    # Give dev server time to startup
    - sleep 40
    - ps
    - echo 'PID'
    - echo $DEV_SERVER_PID

script:
    - npm run test:func -- --testPathPattern $TEST_PATH_PATTERN
    - ./scripts/snapshot-tests/collect-diffs.sh

jobs:
    include:
        - stage: basics
          name: 'Lint, Unit and Functional Non-Snapshot Tests'
          env: TEST_PATH_PATTERN=none
          script:
              - npm run lint
              - npm run test
              - npm run test:func:nosnaps

        # Update snapshots are split into non-US, US modal, and US banner so the CI doesn't time out
        - stage: update_snapshots_non_US
          env: TEST_PATH_PATTERN=spec/[^U][^S]/
          if: branch = develop AND type != pull_request
          script:
              - npm run test:func:ciupdate -- --testPathPattern $TEST_PATH_PATTERN
              - ./scripts/snapshot-tests/git-push.sh
        - stage: update_snapshots_US_banner
          env: TEST_PATH_PATTERN=spec/US/banner
          if: branch = develop AND type != pull_request
          script:
              - npm run test:func:ciupdate -- --testPathPattern $TEST_PATH_PATTERN
              - ./scripts/snapshot-tests/git-push.sh
        - stage: update_snapshots_US_modal
          env: TEST_PATH_PATTERN=spec/US/modal
          if: branch = develop AND type != pull_request
          script:
              - npm run test:func:ciupdate -- --testPathPattern $TEST_PATH_PATTERN
              - sed -i -e 's/DIRTY_SNAPSHOTS=0/DIRTY_SNAPSHOTS=0/g' .travis.yml
              - ./scripts/snapshot-tests/git-push.sh

        - stage: functional
          # Prevent script phase from running with TEST_PATH_PATTERN=none
          if: env(TEST_PATH_PATTERN) != none
        - env: TEST_PATH_PATTERN=spec/DE/banner
        - env: TEST_PATH_PATTERN=spec/DE/modal
        - env: TEST_PATH_PATTERN=spec/GB/banner
        - env: TEST_PATH_PATTERN=spec/GB/modal
        - env: TEST_PATH_PATTERN=spec/US/custom
        # US Banner tests are split due to the number of offer types that exist for it
        - env: TEST_PATH_PATTERN=spec/US/banner/flex
        - env: TEST_PATH_PATTERN=spec/US/banner/text
        - env: TEST_PATH_PATTERN=spec/US/modal

        - stage: deploy
          env: TEST_PATH_PATTERN=none
          # Override script so deploy doesn't run snapshot tests
          script:
          deploy:
              provider: script
              skip_cleanup: true
              script: npx semantic-release@15
              on:
                  branch: release

stages:
    - name: basics
    - name: update_snapshots_non_US
      if: env(DIRTY_SNAPSHOTS) = 1
    - name: update_snapshots_US_banner
      if: env(DIRTY_SNAPSHOTS) = 1
    - name: update_snapshots_US_modal
      if: env(DIRTY_SNAPSHOTS) = 1
    - name: functional
      if: env(DIRTY_SNAPSHOTS) = 0
    - name: deploy
      # Prevent deploy stage from being listed in UI except on release branch
      if: branch = release

# Restricts push builds to develop and release, thus preventing duplicate builds on PRs
branches:
    only:
        - develop
        - release
